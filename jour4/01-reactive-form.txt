il existe une deuxième manière de gérer des formulaires avec angular 

ReactiveForm 

plus de code dans la class et moins de code dans la vue 

ng g c jour4/form1


créer le composant form2 

input de type text 
menu déroulant => select 4  valeurs : vide / France / Allemage / Belgique
textarea 

utiliser reactive form pour générer et récupérer les valeurs saisies dans ce formulaire 

input de type text => min 5 caractères et obligatoire
select => obligatoire (ne peut pas être vide)
textarea min 5 caractères et obligatoire maximum pattern minuscule chiffres majuscule espace et saut de ligne 

si une de ces conditions n'est pas respectée afficher sous le champ concerné un message d'erreur ! 


// il est possible de créer ses propres Valideur (règle de validation)

// ng g c jour4/form3
// créer manuellement un fichier customValidator.ts dans le dossier jour4

// validationAsynchrone => créer un profil utilisateur, l'identifiant choisit il a déjà été choisi par une autre personne 
// attendre qu'il y ait une requete vers la balise de données Est ce que la valeur saisie existe déjà dans la base de données ??? 

// créer le composant form4
// formulaire qui contient 2 champs 
// mot de passe  => input text 
// service  => input text 


// validation personnalisée 
// mot de passe => minimum 8 caractères // minuscule / majuscule // ?!-
//                 obligatoirement que mA!
//                                     aaaaaaaaaaaaaaa = faux  
//                                     aaaaaaaaAaaaaaa = faux  
//                                     aaaaaaaaA!aaaaa = vrai

// => https://www.w3schools.com/tags/att_input_pattern.asp

// service => validation asynchrone est ce que la personne a bien mis "web" / "commercial" / "administratif" => si l'utilisateur a bien écrit un de ces mots clés => ok // sinon message d'erreur 


